                      | /* $begin code-yso */
                      | /* $begin code-ysa */
                      | # Execution begins at address 0
  0x000:              | 	.pos 0
  0x000: 308400010000 | init:	irmovl Stack, %esp  	# Set up Stack pointer
  0x006: 701c000000   | 	jmp Main		# Execute main program
                      | 
                      | # Array of 4 elements
  0x00c:              | 	.align 4
  0x00c: 0d000000     | array:	.long 0xd
  0x010: c0000000     | 	.long 0xc0
  0x014: 000b0000     | 	.long 0xb00
  0x018: 00a00000     | 	.long 0xa000
                      | 
  0x01c: 308004000000 | Main:	irmovl 4,%eax
  0x022: a008         | 	pushl %eax	# Push 4
  0x024: 30820c000000 | 	irmovl array,%edx
  0x02a: a028         | 	pushl %edx      # Push array
  0x02c: 8032000000   | 	call Sum	# Sum(array, 4)
  0x031: 10           | 	halt
                      | 
                      | /* $begin sum-ys 0 */
                      | 	# int Sum(int *Start, int Count)
  0x032: 501404000000 | Sum:	mrmovl 4(%esp),%ecx 	# ecx = Start
  0x038: 502408000000 | 	mrmovl 8(%esp),%edx	# edx = Count
  0x03e: 308000000000 | 	irmovl 0, %eax		# sum = 0
  0x044: 6222         | 	andl   %edx,%edx
  0x046: 7368000000   | 	je     End
  0x04b: 506100000000 | Loop:	mrmovl (%ecx),%esi      # get *Start
  0x051: 6060         | 	addl %esi,%eax          # add to sum
  0x053: 308304000000 | 	irmovl 4,%ebx          # 
  0x059: 6031         | 	addl %ebx,%ecx          # Start++
  0x05b: 3083ffffffff | 	irmovl -1,%ebx	        # 
  0x061: 6032         | 	addl %ebx,%edx          # Count--
  0x063: 744b000000   | 	jne    Loop             # Stop when 0
  0x068: 90           | End:	ret
                      | /* $end sum-ys 0 */
  0x100:              | 	.pos 0x100
  0x100:              | Stack:	# The stack goes here
                      | /* $end code-ysa */
                      | /* $end code-yso */
